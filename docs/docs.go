// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "API para receber eventos de webhook. Esta função é projetada para ser um gateway robusto e escalável, recebendo notificações, validando-as rapidamente e encaminhando para processamento assíncrono.\nAceita um payload JSON via HTTP POST, valida-o e retorna uma confirmação de sucesso.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Recebe um evento de webhook",
                "parameters": [
                    {
                        "description": "Payload do Webhook",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/receiver.WebhookPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resposta de sucesso",
                        "schema": {
                            "$ref": "#/definitions/receiver.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Corpo do JSON inválido",
                        "schema": {
                            "$ref": "#/definitions/receiver.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Método não permitido",
                        "schema": {
                            "$ref": "#/definitions/receiver.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "receiver.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Método não permitido"
                }
            }
        },
        "receiver.SuccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "sucesso"
                }
            }
        },
        "receiver.WebhookPayload": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "eventType": {
                    "type": "string",
                    "example": "message.sent"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-08-29T10:00:00Z"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Receptor de Webhooks API",
	Description:      "Servidor local para a API de recebimento de webhooks e sua documentação.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
